# -*- encoding: UTF-8 -*-

import sys
import time
import random
import config
import motion
from naoqi import ALProxy
tts = ALProxy("ALTextToSpeech",config.ipnao,9559)
sr = ALProxy("ALSpeechRecognition",config.ipnao,9559)
memProxy = ALProxy("ALMemory",config.ipnao,9559)
motionProxy = ALProxy("ALMotion",config.ipnao,9559)
sr.setVocabulary(["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],True)
x = "WordRecognized"


def GivePen():
    # Ajouter le fait que nao Attrappe le stylo
    position = False
    while (position ==False) :
        #tts.say("Donne moi mon stylo s'il te plait")
        joints=["RElbowRoll","RElbowYaw","RHand","RShoulderPitch","RShoulderRoll","RWristYaw"]
        angles=[[0.16878],[0.31136],[1],[ -0.10427],[ -0.10282],[ 1.82387]]
        times=[[1],[1],[1],[1],[1],[1]]
        motionProxy.angleInterpolation(joints,angles,times,True)
        time.sleep(2)
        motionProxy.setAngles("RHand",0,1)
        time.sleep(1.5)

        pos1=motionProxy.getAngles("RHand",True)[0]
        print str(pos1)
        if pos1>0.05:
            #tts.say("Merci")
            position = True
            return True
        else:
            print "encore"
            #tts.say("Allez")

# Nao se met en position pour ecrire
def initPosition():
    names = ["RElbowRoll","RElbowYaw", "RWristYaw", "RShoulderRoll"]
    angles = [1.46654,0.05211,1.60452, -0.25315]
    fractionMaxSpeed = 0.2
    motionProxy.setAngles(names, angles, fractionMaxSpeed)
    time.sleep(2);
    motionProxy.setAngles("RShoulderPitch", 0.17951, fractionMaxSpeed)


# Ici on active tous les moteurs
def StiffnessOn(proxy):
    # We use the "Body" name to signify the collection of all joints
    pNames = "Body"
    pStiffnessLists = 1.0
    pTimeLists = 1.0
    proxy.stiffnessInterpolation(pNames, pStiffnessLists, pTimeLists)

def onWordRecognized(x):
    #Ici on regarde le mot reconnu si l'indice de fiabilité est supérieur à 0.5 & tracer chaque lettre
    lettreDetectee = False
    path= []
    retVal = x
    print "WordRecognize", retVal[0]
    if(retVal != ""):
      if(retVal[0] == "a"):
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.02, +0.00, 0.0, 0.0, 0.0],
            [0.00, -0.04, +0.00, 0.0, 0.0, 0.0],
            [0.00, -0.04, +0.10, 0.0, 0.0, 0.0],
            [0.03, -0.02, +0.10, 0.0, 0.0, 0.0],
            [0.03, -0.02, -0.01, 0.0, 0.0, 0.0],
            [0.03, -0.02, +0.10, 0.0, 0.0, 0.0],
            ]
      elif retVal[0] == "b":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.06, 0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.00, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.00, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.00, -0.00, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "c":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.00, -0.04, +0.00, 0.0, 0.0, 0.0],
            [0.00, -0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.04, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.00, +0.10, 0.0, 0.0, 0.0],
        ]
      elif retVal[0] == "d":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.00, -0.04, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.04, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.00, +0.10, 0.0, 0.0, 0.0],
            [0.00, -0.01, +0.10, 0.0, 0.0, 0.0],
            [0.00, -0.01, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.01, +0.0, 0.0, 0.0, 0.0],
            [0.04, -0.01, +0.10, 0.0, 0.0, 0.0],

        ]
      elif retVal[0] == "e":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.00, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.00, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.04, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "f":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.04, +0.10, 0.0, 0.0, 0.0],
            [+0.03, -0.00, +0.10, 0.0, 0.0, 0.0],
            [+0.03, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.02, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.02, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "g":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.055, -0.04, +0.10, 0.0, 0.0, 0.0],
            [+0.055, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.00, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.00, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.00, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.02, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.03, +0.10, 0.0, 0.0, 0.0],
        ]
      elif retVal[0] == "h":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.00, +0.10, 0.0, 0.0, 0.0],
            [+0.03, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.03, +0.00, 0.0, 0.0, 0.0],
            [+0.03, -0.03, +0.10, 0.0, 0.0, 0.0],
            [+0.00, -0.03, +0.10, 0.0, 0.0, 0.0],
            [+0.00, -0.03, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.03, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.03, +0.1, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "i":
        path=[
            [0.00, 0.00, +0.05, 0.0, 0.0, 0.0],
            [0.04, 0.00, +0.05, 0.0, 0.0, 0.0],
            [0.04, -0.00, +0.0, 0.0, 0.0, 0.0],
            [0.04, -0.00, +0.05, 0.0, 0.0, 0.0],
            [0.025, -0.00, +0.05, 0.0, 0.0, 0.0],
            [0.03, -0.00, +0.0, 0.0, 0.0, 0.0],
            [0.00, -0.00, +0.00, 0.0, 0.0, 0.0],
            [0.00, -0.00, +0.10, 0.0, 0.0, 0.0],
        ]
      elif retVal[0] == "j":
        path=[
            [0.02, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.00, -0.02, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.02, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.02, +0.10, 0.0, 0.0, 0.0],
            [0.04, 0.00, +0.10, 0.0, 0.0, 0.0],
            [0.04, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.04, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.04, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "k":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.02, -0.00, +0.10, 0.0, 0.0, 0.0],
            [0.02, -0.00, +0.00, 0.0, 0.0, 0.0],
            [0.00,-0.02, +0.00, 0.0, 0.0, 0.0],
            [0.00,-0.02, +0.10, 0.0, 0.0, 0.0],
            [0.02, -0.00, +0.10, 0.0, 0.0, 0.0],
            [0.02, -0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.02, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.02, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "l":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.00, -0.03, +0.00, 0.0, 0.0, 0.0],
            [0.00, 0.03, +0.10, 0.0, 0.0, 0.0],
            [0.00, 0.00, +0.10, 0.0, 0.0, 0.0],
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.06, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.06, 0.00, +0.10, 0.0, 0.0, 0.0],
        ]
      elif retVal[0] == "m":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.06, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.035, -0.02, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.00, -0.04, +0.00, 0.0, 0.0, 0.0],
            [+0.00, -0.04, +0.10, 0.0, 0.0, 0.0],
        ]
      elif retVal[0] == "n":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.06, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.0, -0.03, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.03, +0.00, 0.0, 0.0, 0.0],
            [+0.06, -0.03, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "o":
        path=[
            [0.00,0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, 0.02, 0.0,  0.00,  0.0, 0.0],
            [0.00, 0.02, +0.00, 0.0, 0.0, 0.0],
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.00, 0.00, +0.10, 0.0, 0.0, 0.0]
        ]

      elif retVal[0] == "p":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.04, 0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.04, -0.02, +0.00, 0.0, 0.0, 0.0],
            [+0.02, -0.02, +0.00, 0.0, 0.0, 0.0],
            [+0.02, -0.00, +0.00, 0.0, 0.0, 0.0],
            [+0.02, -0.00, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "q":
        path=[
            [0.00,0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, 0.02, 0.0,  0.00,  0.0, 0.0],
            [0.00, 0.02, +0.00, 0.0, 0.0, 0.0],
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.00, 0.00, +0.10, 0.0, 0.0, 0.0],
            [0.00, 0.00, +0.10, 0.0, 0.0, 0.0],
            [0.01, 0.01, +0.10, 0.0, 0.0, 0.0],
            [0.01, 0.01, +0.00, 0.0, 0.0, 0.0],
            [-0.01, -0.01, +0.00, 0.0, 0.0, 0.0],
            [-0.01, -0.01, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "r":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],             # R1
            [+0.04, 0.00, +0.00, 0.0, 0.0, 0.0],            # R2
            [+0.04, -0.02, +0.00, 0.0, 0.0, 0.0],           # R3
            [+0.02, -0.02, +0.00, 0.0, 0.0, 0.0],           # R4
            [+0.02, -0.00, +0.00, 0.0, 0.0, 0.0],           # R5
            [+0.00, -0.02, +0.00, 0.0, 0.0, 0.0],           # R6
            [+0.00, -0.02, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "s":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],             # S1
            [0.00, -0.02, +0.00, 0.0, 0.0, 0.0],            # S2
            [0.02, -0.02, +0.00, 0.0, 0.0, 0.0],            # S3
            [0.02, 0.00, +0.00, 0.0, 0.0, 0.0],             # S4
            [0.04, 0.00, +0.00, 0.0, 0.0, 0.0],             # S5
            [0.04, -0.02, +0.00, 0.0, 0.0, 0.0],            # S6
            [0.04, -0.02, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "t":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],             #T1
            [0.04, 0.00, +0.00, 0.0, 0.0, 0.0],             #T2
            [0.04, 0.02, +0.00, 0.0, 0.0, 0.0],             #T3
            [0.04, -0.02, +0.00, 0.0, 0.0, 0.0],             #T4
            [0.04, -0.02, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "u":
        path=[
            [0.00, 0.01, +0.00, 0.0, 0.0, 0.0],             #U1
            [0.04, 0.01, +0.00, 0.0, 0.0, 0.0],             #U2
            [0.00, 0.01, +0.00, 0.0, 0.0, 0.0],             #U3
            [0.00, -0.02, +0.00, 0.0, 0.0, 0.0],            #U4
            [0.04, -0.02, +0.00, 0.0, 0.0, 0.0],             #U5
            [0.04, -0.02, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "v":
        path=[
            [0.00, 0.00, +0.10, 0.0, 0.0, 0.0],
            [0.04, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.03, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.03, +0.10, 0.0, 0.0, 0.0]
        ]
      elif retVal[0] == "w":
        path=[
            [0.04, 0.01, +0.00, 0.0, 0.0, 0.0],
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.02, -0.01, +0.00, 0.0, 0.0, 0.0],
            [0.00, -0.02, +0.00, 0.0, 0.0, 0.0] ,
            [0.04, -0.03, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.03, +0.10, 0.0, 0.0, 0.0],

        ]
      elif retVal[0] == "x":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.02, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.02, +0.01, 0.0, 0.0, 0.0],
            [0.00, -0.02, +0.01, 0.0, 0.0, 0.0],
            [0.00, -0.02, +0.00, 0.0, 0.0, 0.0],
            [0.02, -0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, +0.02, +0.00, 0.0, 0.0, 0.0],
            [0.04, +0.02, +0.10, 0.0, 0.0, 0.0],
        ]
      elif retVal[0] == "y":
        path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.02, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.02, +0.00, 0.0, 0.0, 0.0],
            [0.02, -0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, +0.02, +0.00, 0.0, 0.0, 0.0],
            [0.04, +0.02, +0.10, 0.0, 0.0, 0.0],
        ]
      elif retVal[0] == "z":
         path=[
            [0.00, 0.00, +0.00, 0.0, 0.0, 0.0],
            [0.00, -0.04, +0.00, 0.0, 0.0, 0.0],
            [0.00, -0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.04, +0.00, 0.0, 0.0, 0.0],
            [0.04, -0.00, +0.00, 0.0, 0.0, 0.0],
            [0.04, +0.00, +0.10, 0.0, 0.0, 0.0],
         ]
      elif retVal[0] == "non":
          return "non"
    # Si une lettre est detectee, return True
    if(path != []):
        # Signifie que le script est rentré dans un des usecases au dessus
        effector= "RArm"
        space = motion.FRAME_ROBOT
        axisMask = 7
        isAbsolute = False
        times = []
        i = 1
        while (i <= (len(path)*2)):
            times.append(float(i))
            i+=2
        #print times

        #motionProxy.setPosition(effector,space,path,FractionMaxSpeed,axisMask)
        motionProxy.positionInterpolation(effector, space, path, axisMask, times, isAbsolute)
        return True
    else:
        return False

reussi = False
#On active les moteurs
StiffnessOn(motionProxy)
initPosition()
#Nao demande le stylo
GivePen()
initPosition()
while reussi == False :
    #On demande la lettre
    if len(sys.argv) == 1:
        tts.say("Quelle lettre veux tu que j'ecrive ?")
        time.sleep(3)
        x = memProxy.getData("WordRecognized")
    else:
        x = sys.argv[1]
    sr.subscribe("Jouer")
    if(onWordRecognized(x)):
        #Si le résultat est reconnu
        reussi = True
        tts.say("Tu vois, moi aussi j'arrive a écrire !")
        #motionProxy.rest()
        motionProxy.setAngles("RShoulderPitch",0.06753, 0.4)

        joints=["RElbowRoll","RElbowYaw","RShoulderPitch","RShoulderRoll","RWristYaw"]
        angles=[[0.03379],[0.86820],[0.05526],[-0.35899],[-0.76397]]
        times=[[1],[1],[1],[1],[1]]
        motionProxy.angleInterpolation(joints,angles,times,True)
        time.sleep(2)
        motionProxy.setAngles("RHand",1,0.5)
        time.sleep(1.5)
        sr.unsubscribe("Jouer")
    else:
        #Si le résultat n'est pas reconnu
        if(onWordRecognized(x) == "non"):
            reussi = True
            sr.unsubscribe("Jouer")
        elif(onWordRecognized(x) == False):
            print "ici je dois recommmencer car Nao a pas compris"
            tts.say("je n'ai pas compris")
